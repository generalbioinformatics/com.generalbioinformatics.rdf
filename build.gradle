// override localbundles property with -Plocalbundles=..., ./gradle.properties or ~/.gradle/gradle.properties
// See: https://docs.gradle.org/current/userguide/build_environment.html
def localRepo = project.hasProperty('localbundles') ? project['localbundles'] : 
	'file://' + new File(System.getProperty('user.home'), 'prg/bundle-repository').absolutePath

def githash = "git log -1 --format='%H'".execute().in.readLines()[0];
def builddate = new Date().format("yyyyMMdd")

allprojects {
	apply plugin: 'java'
	apply plugin: 'ivy-publish'
	apply plugin: 'eclipse'

	group = 'com.generalbioinformatics'
	version = '1.0-SNAPSHOT'
}

subprojects {
	sourceCompatibility = 1.7
	targetCompatibility = 1.7

	sourceSets.main.java.srcDirs = ['src']
	sourceSets.test.java.srcDirs = ['test']
		
	jar {

		try {
			def gitdiff = "git diff --exit-code".execute()
			gitdiff.waitFor()
			assert (gitdiff.exitcode == 0) : "Cannot create jar, git is not in a clean state. First commit your work."
		} catch (IOException e) { /* ignore if git is not installed */ }
		 	
		manifest {
			from 'META-INF/MANIFEST.MF'
		
			attributes 'Build-Date': builddate,
				'Git-Hash': githash

		}
	}

	repositories {

		ivy {
			name "local_bundle_repository"
			url localRepo
		}
	}

	publishing {

		publications {
			ivyJava(IvyPublication) {
				from components.java
			}
		}
	
		repositories {
			add project.repositories.local_bundle_repository			
		}
	}

}

// we need the modified classpath setting from the subproject before creating the docs task
evaluationDependsOn(':com.generalbioinformatics.rdf')

task docs(type: Javadoc) {
    source subprojects*.javadoc*.source
	classpath = files(subprojects.collect {project -> project.sourceSets.main.compileClasspath})
}
